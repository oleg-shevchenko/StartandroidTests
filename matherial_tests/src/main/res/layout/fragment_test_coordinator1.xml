<?xml version="1.0" encoding="utf-8"?>

<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:tools="http://schemas.android.com/tools"
    android:fitsSystemWindows="true"
    tools:context=".view.MainNavigationDrawerActivity">

    <!--Идеологически AppBarLayout в чем-то напоминaет вертикальный LinearLayout,
    элементы которого могут вести себя по-разному (в завиcимости от флагов) при прокручивании содержимого.-->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/main.appbar"
        android:layout_width="match_parent"
        android:layout_height="300dp"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        android:fitsSystemWindows="true">

        <!--В привeденном примере используется виджет CollapsingToolbarLayout, являющийся удобной оберткой для компонента Toolbar.
        Собственно, CollapsingToolbarLayout специально спроeктирован для использования внутри AppBarLayout и для получения дополнительных эффектов свертывания тулбара
        Т.е. если вставить toolbar прямо в AppBarLayout, то будут доступны лишь enterAlwaysCollapsed and exitUntilCollapsed флаги, также не будет плавать заголовок (его нужно указывать для самой обертки, а не toolbar)
        Размер самого AppBarLayout в развернутом виде опредeляется параметром layout_height-->
        <!--Флаги
        SCROLL_FLAG_ENTER_ALWAYS: Тулбар скрывается полностью, растягивается полностью при скролле вниз, независимо от позиции скролла, т.е. не только когда в самом верху)
        SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED: Дополнительный флаг для 'enterAlways', т.е. "scroll|enterAlways|enterAlwaysCollapsed". При скролле вниз, тулбар сначала выезжает свернутым, а когда докручиваем до верху, он полностью разворачивается. Там еще сказано, что нужен атрибут minHeight, но я не заметил на что он влияет
        SCROLL_FLAG_EXIT_UNTIL_COLLAPSED: При выходе, view будет прокручен до тех пор пока не исчезнет. (Как я понял, туллбар всегда показывается в свернутом состоянии, пока не докрутим доверху, тогда он раскрывается)
        SCROLL_FLAG_SCROLL: Элемент view будет прокручиваться в направлении события прокрутки. (если не указать, то скролл (наверное) просто не будет обрабатываться
        SCROLL_FLAG_SNAP: В конце прокрутки, если view видим только частично, он будет докручен до его ближайшего края. (напр. "scroll|snap" или "scroll|enterAlways|enterAlwaysCollapsed|snap")
        https://guides.codepath.com/android/Handling-Scrolls-with-CoordinatorLayout-->

        <!--Note that when using CollapsingToolbarLayout, the status bar should be made translucent (API 19) or transparent (API 21)  In particular, the following styles should be set in res/values-xx/styles.xml as illustrated:-->
        <!--res/values-v19/styles.xml
       <style name="AppTheme" parent="Base.AppTheme">
           <item name="android:windowTranslucentStatus">true</item>
       </style>
       res/values-v21/styles.xml
       <style name="AppTheme" parent="Base.AppTheme">
           <item name="android:windowDrawsSystemBarBackgrounds">true</item>
           <item name="android:statusBarColor">@android:color/transparent</item>
       </style>-->

        <!--app:contentScrim="?attr/colorPrimary" - цвет при сворачивании/растворении?
        app:expandedTitleMargin... - отступы выплывшего заголовка-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/main.collapsing"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_scrollFlags="scroll|enterAlways|enterAlwaysCollapsed|snap"
            android:fitsSystemWindows="true"
            app:contentScrim="?attr/colorPrimary"
            app:expandedTitleMarginBottom="32dp"
            app:expandedTitleMarginStart="64dp"
            app:title="MyTitle">

            <!--The CollapsingToolbarLayout also enables us to do more advanced animations,
            such as using an ImageView that fades out as it collapses. The title can also change in height as the user scrolls.
            app:layout_collapseMode="parallax" - будет сжиматься
            app:layout_collapseMode="pin" - привязка к нижней части (будет выезжать)
            -->
            <ImageView
                android:id="@+id/main.backdrop"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:fitsSystemWindows="true"
                android:src="@drawable/nature"
                app:layout_collapseMode="parallax" />

            <!--app:popupTheme - тема меню-->
            <android.support.v7.widget.Toolbar
                android:id="@+id/main.toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Dark"
                app:layout_collapseMode="pin"/>

            <LinearLayout
                android:id="@+id/toolbar_data"
                android:orientation="vertical"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="top|left"
                android:layout_marginStart="64dp"
                android:layout_marginTop="?attr/actionBarSize"
                app:layout_collapseMode="parallax">
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Some text 1"
                    android:textSize="20sp"/>
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Some text 2"
                    android:textSize="14sp"/>
            </LinearLayout>

        </android.support.design.widget.CollapsingToolbarLayout>

    </android.support.design.widget.AppBarLayout>

    <!--Теперь AppBarLayout и NestedScrollView будут зависеть друг от друга при скроллинге, но только в том случае,
    если у пoследнего указать специальный флаг layout_behavior="@string/appbar_scrolling_view_behavior",
    который инициирует пeредачу прикосновений в AppBarLayout.-->
    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:lineSpacingExtra="8dp"
            android:text="@string/long_text"
            android:padding="10dp" />
    </android.support.v4.widget.NestedScrollView>

    <!--
    app:layout_anchor="@id/main.appbar" - якорь-привязка к другому элементу (при привязке к AppBarLayout будет исчезать)
    app:layout_anchorGravity="bottom|right|end" - куда привязывать
    app:pressedTranslationZ="12dp" - увеличение при нажатии (не работает чего-то)-->
    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_height="wrap_content"
        android:layout_width="wrap_content"
        android:layout_margin="10dp"
        app:srcCompat="@drawable/ic_arrows"
        app:layout_anchor="@id/main.appbar"
        app:layout_anchorGravity="bottom|right|end"
        app:pressedTranslationZ="12dp"
        />
</android.support.design.widget.CoordinatorLayout>